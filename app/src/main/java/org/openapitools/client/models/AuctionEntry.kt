/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AuctionsCreatePostRequestItem

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param minimalReputation Minimal amount of reputation that is required to participate in this auction.
 * @param winner If winner is set, auction is in the paused state. While on pause, bids can't be added, but can be removed.
 * @param `private` 
 * @param visible 
 * @param noteRaw Raw format string, use it inside textarea, for editing purposes.
 * @param note It's safe to inject this into html, this is refined, formatted string from MD processor.
 * @param owner 
 * @param startingPrice 
 * @param buyoutPrice if `buyout_price` is set to null, that means ∞
 * @param minimalIncrement Minimum bid increase value
 * @param isDirectSell Shortcut to `starting_price` == `buyout_price`, means that auction is not an auction, but an order.
 * @param topBid 
 * @param created 
 * @param updated Last time auction was updated, eighter by owner or by placing a bid.
 * @param platform 
 * @param closed Auction is closed, and was marked for removal or archiving, no one can add or remove bids now.
 * @param isMarkedFor Auction will be removed or archivated after `marked_operation_at`
 * @param markedOperationAt 
 * @param item 
 */


data class AuctionEntry (

    @Json(name = "id")
    val id: kotlin.String? = null,

    /* Minimal amount of reputation that is required to participate in this auction. */
    @Json(name = "minimal_reputation")
    val minimalReputation: kotlin.Int? = 0,

    /* If winner is set, auction is in the paused state. While on pause, bids can't be added, but can be removed. */
    @Json(name = "winner")
    val winner: kotlin.String? = null,

    @Json(name = "private")
    val `private`: kotlin.Boolean? = null,

    @Json(name = "visible")
    val visible: kotlin.Boolean? = null,

    /* Raw format string, use it inside textarea, for editing purposes. */
    @Json(name = "note_raw")
    val noteRaw: kotlin.String? = null,

    /* It's safe to inject this into html, this is refined, formatted string from MD processor. */
    @Json(name = "note")
    val note: kotlin.String? = null,

    @Json(name = "owner")
    val owner: kotlin.String? = null,

    @Json(name = "starting_price")
    val startingPrice: kotlin.Int? = null,

    /* if `buyout_price` is set to null, that means ∞ */
    @Json(name = "buyout_price")
    val buyoutPrice: kotlin.Int? = null,

    /* Minimum bid increase value */
    @Json(name = "minimal_increment")
    val minimalIncrement: kotlin.Int? = 1,

    /* Shortcut to `starting_price` == `buyout_price`, means that auction is not an auction, but an order. */
    @Json(name = "is_direct_sell")
    val isDirectSell: kotlin.Boolean? = null,

    @Json(name = "top_bid")
    val topBid: kotlin.Int? = null,

    @Json(name = "created")
    val created: java.time.OffsetDateTime? = null,

    /* Last time auction was updated, eighter by owner or by placing a bid. */
    @Json(name = "updated")
    val updated: java.time.OffsetDateTime? = null,

    @Json(name = "platform")
    val platform: AuctionEntry.Platform? = null,

    /* Auction is closed, and was marked for removal or archiving, no one can add or remove bids now. */
    @Json(name = "closed")
    val closed: kotlin.Boolean? = null,

    /* Auction will be removed or archivated after `marked_operation_at` */
    @Json(name = "is_marked_for")
    val isMarkedFor: AuctionEntry.IsMarkedFor? = null,

    @Json(name = "marked_operation_at")
    val markedOperationAt: java.time.OffsetDateTime? = null,

    @Json(name = "item")
    val item: AuctionsCreatePostRequestItem? = null

) {

    /**
     * 
     *
     * Values: switch,pc,ps4,xbox
     */
    @JsonClass(generateAdapter = false)
    enum class Platform(val value: kotlin.String) {
        @Json(name = "switch") switch("switch"),
        @Json(name = "pc") pc("pc"),
        @Json(name = "ps4") ps4("ps4"),
        @Json(name = "xbox") xbox("xbox");
    }
    /**
     * Auction will be removed or archivated after `marked_operation_at`
     *
     * Values: `null`,removing,archiving
     */
    @JsonClass(generateAdapter = false)
    enum class IsMarkedFor(val value: kotlin.String) {
        @Json(name = "null") `null`("null"),
        @Json(name = "removing") removing("removing"),
        @Json(name = "archiving") archiving("archiving");
    }
}

