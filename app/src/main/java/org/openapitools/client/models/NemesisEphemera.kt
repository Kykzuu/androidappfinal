/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.Element

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param urlName 
 * @param icon it's a part of url, if you want to get an image you need to prepend assets root dirrectory: `http://warframe.market/static/assets/` 
 * @param iconFormat 
 * @param thumb thumb of an icon
 * @param animation Path to the GIF animatgion of ephemera
 * @param animationFormat 
 * @param element 
 * @param itemName Name of the ephemera
 */


data class NemesisEphemera (

    @Json(name = "id")
    val id: kotlin.String? = null,

    @Json(name = "url_name")
    val urlName: kotlin.String? = null,

    /* it's a part of url, if you want to get an image you need to prepend assets root dirrectory: `http://warframe.market/static/assets/`  */
    @Json(name = "icon")
    val icon: kotlin.String? = null,

    @Json(name = "icon_format")
    val iconFormat: NemesisEphemera.IconFormat? = null,

    /* thumb of an icon */
    @Json(name = "thumb")
    val thumb: kotlin.String? = null,

    /* Path to the GIF animatgion of ephemera */
    @Json(name = "animation")
    val animation: kotlin.String? = null,

    @Json(name = "animation_format")
    val animationFormat: NemesisEphemera.AnimationFormat? = null,

    @Json(name = "element")
    val element: Element? = null,

    /* Name of the ephemera */
    @Json(name = "item_name")
    val itemName: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: land,port
     */
    @JsonClass(generateAdapter = false)
    enum class IconFormat(val value: kotlin.String) {
        @Json(name = "land") land("land"),
        @Json(name = "port") port("port");
    }
    /**
     * 
     *
     * Values: land,port
     */
    @JsonClass(generateAdapter = false)
    enum class AnimationFormat(val value: kotlin.String) {
        @Json(name = "land") land("land"),
        @Json(name = "port") port("port");
    }
}

