/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param urlName 
 * @param group Group of the attribute, like top, melee, etc.   Used for grouping within UI elements. 
 * @param prefix 
 * @param suffix 
 * @param positiveIsNegative Negative value of this attribute indicate that attribute is positive, e.g. `Recoil`.
 * @param exclusiveTo This attribute is only available on specific types of items, check item property: `riven_type`   If `null`, then this attribute can be selected on every item. 
 * @param effect Name of the attribute, depends on the requested language (headers)
 * @param units measurement units
 * @param negativeOnly This attribute occurs only as a negative.
 * @param searchOnly used only while searching for auctions
 */


data class RivenAttribute (

    @Json(name = "id")
    val id: kotlin.String? = null,

    @Json(name = "url_name")
    val urlName: kotlin.String? = null,

    /* Group of the attribute, like top, melee, etc.   Used for grouping within UI elements.  */
    @Json(name = "group")
    val group: RivenAttribute.Group? = null,

    @Json(name = "prefix")
    val prefix: kotlin.String? = null,

    @Json(name = "suffix")
    val suffix: kotlin.String? = null,

    /* Negative value of this attribute indicate that attribute is positive, e.g. `Recoil`. */
    @Json(name = "positive_is_negative")
    val positiveIsNegative: kotlin.Boolean? = null,

    /* This attribute is only available on specific types of items, check item property: `riven_type`   If `null`, then this attribute can be selected on every item.  */
    @Json(name = "exclusive_to")
    val exclusiveTo: RivenAttribute.ExclusiveTo? = null,

    /* Name of the attribute, depends on the requested language (headers) */
    @Json(name = "effect")
    val effect: kotlin.String? = null,

    /* measurement units */
    @Json(name = "units")
    val units: RivenAttribute.Units? = null,

    /* This attribute occurs only as a negative. */
    @Json(name = "negative_only")
    val negativeOnly: kotlin.Boolean? = null,

    /* used only while searching for auctions */
    @Json(name = "search_only")
    val searchOnly: kotlin.Boolean? = null

) {

    /**
     * Group of the attribute, like top, melee, etc.   Used for grouping within UI elements. 
     *
     * Values: default,melee,top
     */
    @JsonClass(generateAdapter = false)
    enum class Group(val value: kotlin.String) {
        @Json(name = "default") default("default"),
        @Json(name = "melee") melee("melee"),
        @Json(name = "top") top("top");
    }
    /**
     * This attribute is only available on specific types of items, check item property: `riven_type`   If `null`, then this attribute can be selected on every item. 
     *
     * Values: kitgun,pistol,rifle,shotgun,melee,zaw,`null`
     */
    @JsonClass(generateAdapter = false)
    enum class ExclusiveTo(val value: kotlin.String) {
        @Json(name = "kitgun") kitgun("kitgun"),
        @Json(name = "pistol") pistol("pistol"),
        @Json(name = "rifle") rifle("rifle"),
        @Json(name = "shotgun") shotgun("shotgun"),
        @Json(name = "melee") melee("melee"),
        @Json(name = "zaw") zaw("zaw"),
        @Json(name = "null") `null`("null");
    }
    /**
     * measurement units
     *
     * Values: percent,seconds,`null`
     */
    @JsonClass(generateAdapter = false)
    enum class Units(val value: kotlin.String) {
        @Json(name = "percent") percent("percent"),
        @Json(name = "seconds") seconds("seconds"),
        @Json(name = "null") `null`("null");
    }
}

