/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param urlName 
 * @param group Group of the item, like shotgin, rifle, melee, etc.   Used for grouping within UI elements. 
 * @param rivenType Type of the riven mod, to restrict certain attributes to specific types.
 * @param icon path to the icon asset file
 * @param iconFormat 
 * @param thumb 
 * @param itemName Name of the weapon, depends on the requested language (headers)
 */


data class RivenItem (

    @Json(name = "id")
    val id: kotlin.String? = null,

    @Json(name = "url_name")
    val urlName: kotlin.String? = null,

    /* Group of the item, like shotgin, rifle, melee, etc.   Used for grouping within UI elements.  */
    @Json(name = "group")
    val group: RivenItem.Group? = null,

    /* Type of the riven mod, to restrict certain attributes to specific types. */
    @Json(name = "riven_type")
    val rivenType: RivenItem.RivenType? = null,

    /* path to the icon asset file */
    @Json(name = "icon")
    val icon: kotlin.String? = null,

    @Json(name = "icon_format")
    val iconFormat: RivenItem.IconFormat? = null,

    @Json(name = "thumb")
    val thumb: kotlin.String? = null,

    /* Name of the weapon, depends on the requested language (headers) */
    @Json(name = "item_name")
    val itemName: kotlin.String? = null

) {

    /**
     * Group of the item, like shotgin, rifle, melee, etc.   Used for grouping within UI elements. 
     *
     * Values: primary,secondary,melee,zaw,sentinel,archgun,kitgun
     */
    @JsonClass(generateAdapter = false)
    enum class Group(val value: kotlin.String) {
        @Json(name = "primary") primary("primary"),
        @Json(name = "secondary") secondary("secondary"),
        @Json(name = "melee") melee("melee"),
        @Json(name = "zaw") zaw("zaw"),
        @Json(name = "sentinel") sentinel("sentinel"),
        @Json(name = "archgun") archgun("archgun"),
        @Json(name = "kitgun") kitgun("kitgun");
    }
    /**
     * Type of the riven mod, to restrict certain attributes to specific types.
     *
     * Values: shotgun,rifle,pistol,melee,zaw,kitgun
     */
    @JsonClass(generateAdapter = false)
    enum class RivenType(val value: kotlin.String) {
        @Json(name = "shotgun") shotgun("shotgun"),
        @Json(name = "rifle") rifle("rifle"),
        @Json(name = "pistol") pistol("pistol"),
        @Json(name = "melee") melee("melee"),
        @Json(name = "zaw") zaw("zaw"),
        @Json(name = "kitgun") kitgun("kitgun");
    }
    /**
     * 
     *
     * Values: land,port
     */
    @JsonClass(generateAdapter = false)
    enum class IconFormat(val value: kotlin.String) {
        @Json(name = "land") land("land"),
        @Json(name = "port") port("port");
    }
}

